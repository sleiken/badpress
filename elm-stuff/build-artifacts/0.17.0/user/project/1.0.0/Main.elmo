var _user$project$Main$url = '/api';
var _user$project$Main$decode = A2(
	_elm_lang$core$Json_Decode$at,
	_elm_lang$core$Native_List.fromArray(
		['name']),
	_elm_lang$core$Json_Decode$string);
var _user$project$Main$fetchTask = A2(_evancz$elm_http$Http$get, _user$project$Main$decode, _user$project$Main$url);
var _user$project$Main$init = {ctor: '_Tuple2', _0: '', _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$FetchError = function (a) {
	return {ctor: 'FetchError', _0: a};
};
var _user$project$Main$FetchSuccess = function (a) {
	return {ctor: 'FetchSuccess', _0: a};
};
var _user$project$Main$fetchCmd = A3(_elm_lang$core$Task$perform, _user$project$Main$FetchError, _user$project$Main$FetchSuccess, _user$project$Main$fetchTask);
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Fetch':
				return {ctor: '_Tuple2', _0: model, _1: _user$project$Main$fetchCmd};
			case 'FetchSuccess':
				return {ctor: '_Tuple2', _0: _p0._0, _1: _elm_lang$core$Platform_Cmd$none};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Basics$toString(_p0._0),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$Fetch = {ctor: 'Fetch'};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$form,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$input,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$id('test'),
								_elm_lang$html$Html_Attributes$type$('text'),
								_elm_lang$html$Html_Attributes$value(model)
							]),
						_elm_lang$core$Native_List.fromArray(
							[]))
					])),
				A2(
				_elm_lang$html$Html$button,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Events$onClick(_user$project$Main$Fetch)
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Fetch')
					]))
			]));
};
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{
			init: _user$project$Main$init,
			view: _user$project$Main$view,
			update: _user$project$Main$update,
			subscriptions: _elm_lang$core$Basics$always(_elm_lang$core$Platform_Sub$none)
		})
};
